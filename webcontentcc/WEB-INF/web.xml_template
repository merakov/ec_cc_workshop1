<?xml version="1.0" encoding="UTF-8"?>

<!--
    Default web.xml for CaptainCasa based web applications.
 -->

<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
         xmlns="http://java.sun.com/xml/ns/javaee" 
         xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" 
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" 
         id="WebApp_ID" 
         version="3.0">
         
  <display-name>JSF1</display-name>
  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>default.html</welcome-file>
    <welcome-file>default.htm</welcome-file>
    <welcome-file>default.jsp</welcome-file>
  </welcome-file-list>

  <!-- ********** CONTEXT PARAMETERS *************************************** -->

  <!-- JBoss Deployment - use the reference implementation that comes
       with CapatainCasa by default -->
  <context-param>
    <param-name>org.jboss.jbossfaces.WAR_BUNDLES_JSF_IMPL</param-name>
    <param-value>true</param-value>
  </context-param>  

  <!-- Since 20190109 we use the servlet 3.0 interface for
       adding servlets into the server processing. When using servlet 2.5
       or when using certain application servers you want to expliclty
       load all servlets via the web.xml definitions. In this case:
       uncomment the lines below. And in this case: carefully check that
       your web.xml includes all the servlets required by CaptainCasa
       processing. -->
  <!--
  <context-param>
    <param-name>org.eclnt.explicitlyManageAllServletsInWebXml</param-name>
    <param-value>true</param-value>
  </context-param>  
  -->

  <!-- ********** FILTER DEFINITIONS *************************************** -->

  <filter>
    <filter-name>org.eclnt.jsfserver.util.CacheFilter</filter-name>
    <filter-class>org.eclnt.jsfserver.util.CacheFilter</filter-class>
  </filter>
  <filter>
    <filter-name>org.eclnt.jsfserver.util.CompressionFilter</filter-name>
    <filter-class>org.eclnt.jsfserver.util.CompressionFilter</filter-class>
  </filter>
  <!-- 
      Optional: response logging filter: only for development usage!
      <filter>
        <filter-name>org.eclnt.jsfserver.util.ResponseLoggerFilter</filter-name>
        <filter-class>org.eclnt.jsfserver.util.ResponseLoggerFilter</filter-class>
      </filter>
  -->
  <filter>
    <filter-name>org.eclnt.jsfserver.util.SecurityFilter</filter-name>
    <filter-class>org.eclnt.jsfserver.util.SecurityFilter</filter-class>
  </filter>
  <filter>
    <filter-name>org.eclnt.jsfserver.util.ThreadingFilter</filter-name>
    <filter-class>org.eclnt.jsfserver.util.ThreadingFilter</filter-class>
  </filter>
  
  <filter-mapping>
    <filter-name>org.eclnt.jsfserver.util.CacheFilter</filter-name>
    <url-pattern>*.js</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>org.eclnt.jsfserver.util.CacheFilter</filter-name>
    <url-pattern>*.css</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>org.eclnt.jsfserver.util.CompressionFilter</filter-name>
    <url-pattern>*.jsp</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>org.eclnt.jsfserver.util.CompressionFilter</filter-name>
    <url-pattern>*.xml</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>org.eclnt.jsfserver.util.SecurityFilter</filter-name>
    <url-pattern>*.jsp</url-pattern>
  </filter-mapping>
  <!--
      <filter-mapping>
        <filter-name>org.eclnt.jsfserver.util.ResponseLoggerFilter</filter-name>
        <url-pattern>/*</url-pattern>
      </filter-mapping>
  -->
  <filter-mapping>
    <filter-name>org.eclnt.jsfserver.util.ThreadingFilter</filter-name>
    <url-pattern>*.jsp</url-pattern>
  </filter-mapping>
  
  <!-- ********** LISTENERS ************************************************ -->
  
  <listener>
    <listener-class>org.eclnt.jsfserver.util.CCServletContextListener</listener-class>
  </listener>
  <listener>
    <listener-class>org.eclnt.jsfserver.util.HttpSessionListenerDelegator</listener-class>
  </listener>
    
  <!-- ********** SERVLET DEFINITIONS ************************************** -->
  
  <servlet>
    <servlet-name>Faces Servlet</servlet-name>
    <servlet-class>javax.faces.webapp.FacesServlet</servlet-class>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet id="JnlpDownloadServlet">
    <servlet-name>JnlpDownloadServlet</servlet-name>
    <servlet-class>jnlp.sample.servlet.JnlpDownloadServlet</servlet-class>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet id="AppletStarter">
    <servlet-name>AppletStarter</servlet-name>
    <servlet-class>org.eclnt.jsfserver.starter.AppletStarter</servlet-class>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet id="BufferedContentServlet">
    <servlet-name>BufferedContentServlet</servlet-name>
    <servlet-class>org.eclnt.jsfserver.bufferedcontent.BufferedContentServlet</servlet-class>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet id="UploadContentServlet">
    <servlet-name>UploadContentServlet</servlet-name>
    <servlet-class>org.eclnt.jsfserver.bufferedcontent.UploadContentServlet</servlet-class>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet id="SessionInvalidationServlet">
    <servlet-name>SessionInvalidationServlet</servlet-name>
    <servlet-class>org.eclnt.jsfserver.util.SessionInvalidationServlet</servlet-class>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet id="AutoCompleteServlet">
    <servlet-name>AutoCompleteServlet</servlet-name>
    <servlet-class>org.eclnt.jsfserver.util.AutoCompleteServlet</servlet-class>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet id="ExtCalendarServlet">
    <servlet-name>ExtCalendarServlet</servlet-name>
    <servlet-class>org.eclnt.jsfserver.calendar.ExtCalendarServlet</servlet-class>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet id="LongPollingServlet">
    <servlet-name>LongPollingServlet</servlet-name>
    <servlet-class>org.eclnt.jsfserver.polling.LongPollingServlet</servlet-class>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet id="UI5Starter">
    <servlet-name>UI5Starter</servlet-name>
    <servlet-class>org.eclnt.jsfserver.starter.UI5Starter</servlet-class>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet id="RISCStarter">
    <servlet-name>RISCStarter</servlet-name>
    <servlet-class>org.eclnt.jsfserver.starter.RISCStarter</servlet-class>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet id="ImageSizeServlet">
    <servlet-name>ImageSizeServlet</servlet-name>
    <servlet-class>org.eclnt.jsfserver.util.ImageSizeServlet</servlet-class>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet id="DynamicImageServlet">
    <servlet-name>DynamicImageServlet</servlet-name>
    <servlet-class>org.eclnt.jsfserver.util.DynamicImageServlet</servlet-class>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet id="CLResourceAccessServlet">
    <servlet-name>CLResourceAccessServlet</servlet-name>
    <servlet-class>org.eclnt.jsfserver.util.CLResourceAccessServlet</servlet-class>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet id="TempFileAccessServlet">
    <servlet-name>TempFileAccessServlet</servlet-name>
    <servlet-class>org.eclnt.jsfserver.util.tempfile.TempFileAccessServlet</servlet-class>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <!--
      Optional, only Tomcat, comet based LongPollingServlet
      <servlet id="LongPollingServletComet">
        <servlet-name>LongPollingServletComet</servlet-name>
        <servlet-class>org.eclnt.jsfserver.polling.comet.LongPollingServletComet</servlet-class>
        <load-on-startup>1</load-on-startup>
      </servlet>
  -->
  <!--
      Optional, servlet 3.0 based long polling
      <servlet id="LongPollingServlet30API">
        <servlet-name>LongPollingServlet30API</servlet-name>
        <servlet-class>org.eclnt.jsfserver.polling.LongPollingServlet30API</servlet-class>
        <load-on-startup>1</load-on-startup>
        <async-supported>true</async-supported>        
      </servlet>
  -->
  <!--
      Optional, only used if providin server side loading of client literals
      <servlet id="ClientLiteralServlet">
        <servlet-name>ClientLiteralServlet</servlet-name>
        <servlet-class>org.eclnt.jsfserver.clientliteralloader.ClientLiteralServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
      </servlet>
  -->
  
  <servlet-mapping>
    <servlet-name>Faces Servlet</servlet-name>
    <url-pattern>/faces/*</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>JnlpDownloadServlet</servlet-name>
    <url-pattern>*.jnlp</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>AppletStarter</servlet-name>
    <url-pattern>*.ccapplet</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>AppletStarter</servlet-name>
    <url-pattern>*.ccwebstart</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>AppletStarter</servlet-name>
    <url-pattern>*.ccwebstartfx</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>BufferedContentServlet</servlet-name>
    <url-pattern>*.ccbuffer</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>BufferedContentServlet</servlet-name>
    <url-pattern>/ccbuffer/*</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>UploadContentServlet</servlet-name>
    <url-pattern>*.ccupload</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>UploadContentServlet</servlet-name>
    <url-pattern>*.ccuploadui5</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>SessionInvalidationServlet</servlet-name>
    <url-pattern>*.ccinvalidatesession</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>AutoCompleteServlet</servlet-name>
    <url-pattern>*.ccautocomplete</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>ExtCalendarServlet</servlet-name>
    <url-pattern>*.ccextcalendar</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>LongPollingServlet</servlet-name>
    <url-pattern>*.cclongpolling</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>UI5Starter</servlet-name>
    <url-pattern>*.ccui5</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>RISCStarter</servlet-name>
    <url-pattern>*.risc</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>ImageSizeServlet</servlet-name>
    <url-pattern>/ccimagesize/*</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>DynamicImageServlet</servlet-name>
    <url-pattern>/ccdynamicimage/*</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>DynamicImageServlet</servlet-name>
    <url-pattern>*.ccsvg</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>CLResourceAccessServlet</servlet-name>
    <url-pattern>*.ccclresource</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>TempFileAccessServlet</servlet-name>
    <url-pattern>/cctempfileaccess/*</url-pattern>
  </servlet-mapping>
  <!--
      Optional, only Tomcat, comet based LongPollingServlet
      <servlet-mapping>
        <servlet-name>LongPollingServletComet</servlet-name>
        <url-pattern>*.cclongpollingcomet</url-pattern>
      </servlet-mapping>
  -->
  <!--
      Optional, servlet 3.0 based LongPollingServlet
      <servlet-mapping>
        <servlet-name>LongPollingServlet30API</servlet-name>
        <url-pattern>*.cclongpolling30API</url-pattern>
      </servlet-mapping>
  -->
  <!--
      Optional
      <servlet-mapping>
        <servlet-name>ClientLiteralServlet</servlet-name>
        <url-pattern>*.ccclientliterals</url-pattern>
      </servlet-mapping>
  -->
  
  <!-- ********** Servlets that are registered via API ********************* -->
  <!-- When having switched context parameter "org.eclnt.explicitlyManageAllServletsInWebXml" 
       to true, then all servlets need to be registered in the web.xml. 
       The following is the list of servelts that are by default registered 
       vai servlet-3.0-API. Only uncomment/use if having set the context
       parameter to "true". -->
  <!--
      <servlet id="StyleReaderServlet">
        <servlet-name>StyleReaderServlet</servlet-name>
        <servlet-class>org.eclnt.jsfserver.util.StyleReaderServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
      </servlet>
      <servlet-mapping>
        <servlet-name>StyleReaderServlet</servlet-name>
        <url-pattern>/eclntjsfserver/styles/*</url-pattern>
      </servlet-mapping>
  -->
  <!--
      <servlet id="ClientI18NReaderServlet">
        <servlet-name>ClientI18NReaderServlet</servlet-name>
        <servlet-class>org.eclnt.jsfserver.util.ClientI18NReaderServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
      </servlet>
      <servlet-mapping>
        <servlet-name>ClientI18NReaderServlet</servlet-name>
        <url-pattern>/clientlocalization.i18n</url-pattern>
      </servlet-mapping>
  -->
  
  <!-- ********** SESSION MANAGEMENT *************************************** -->
  
  <session-config>
      <session-timeout>60</session-timeout>
      <tracking-mode>URL</tracking-mode>
  </session-config>
  
  <!--
  Alternative session management via cookies. Also has to be configured in
  eclntjsfserver/config/system.xml!
  
  <session-config>
      <session-timeout>60</session-timeout>
      <tracking-mode>COOKIE</tracking-mode>
      <cookie-config>
          <http-only>true</http-only>
          <secure>true</secure>
      </cookie-config>
  </session-config>
  -->
  
  <!-- ********** MIME TYPES *********************************************** -->
  
  <mime-mapping>
    <extension>jnlp</extension>
    <mime-type>application/x-java-jnlp-file</mime-type>
  </mime-mapping>
  
</web-app>