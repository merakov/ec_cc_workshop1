/**
 * You may add a plugin.js into the /plugin directory which is loaded in 
 * addition to the normal client. This plugin may contain implementation
 * of predefind exits of the RISC-client.
 */

// -----------------------------------------------------------------------------
// JavaScript startup: this JavaScript is executed directly when it is loaded
// -----------------------------------------------------------------------------

// Setting the color palette of the color chooser
// RISCColorSelectionExt_setColorPalette(headlineColors,paletteColors);

// -----------------------------------------------------------------------------
// Explicit plugin object that is used as exit for dedicated functions
// Only implement these methods that are relevant for you! (If a method is not
// implemented then it is not used.)
// -----------------------------------------------------------------------------

CCPlugin = new Object();

/**
 * Returns the HTML that is output if an error occurs during communication.
 */
CCPlugin.createClientErrorPageHTML = function(pReloadUrl,pMessage)
{
    var sb = new Array();
    sb.push("<div style='font-family:Open Sans;width:100%;height:100%;padding:20px;background-color:#FFFFFF;-moz-box-sizing: border-box;-webkit-box-sizing: border-box;box-sizing: border-box;overflow:auto'>");
    sb.push("<p style='font-family:Open Sans;font-size:25px; font-weight:bold'>Problem</p>");
    sb.push("<p style='font-family:Open Sans;font-size:12px'>");
    sb.push("A problem occurred when communicating between the client and the server.");
    sb.push("</p>");
    if (pMessage != null && pMessage != "")
    {
    sb.push("<hr>");
    sb.push("<p style='font-family:Open Sans;font-size:12px'>");
    sb.push("Details:");
    sb.push("</p>");
    sb.push("<p>");
    sb.push("<div style='width=100%;background-color:#F0F0F0;padding:10;font-family:Courier New;font-size:11px;border:0px #c0c0c0 solid'>"+pMessage+"</div>");
    sb.push("</p>");
    }
    sb.push("<hr>");
    sb.push("<p style='font-family:Open Sans;font-size:12px'>");
    sb.push("Typical issues that may have caused the problem are:");
    sb.push("<ul>");
    sb.push("<li style='font-family:Open Sans;font-size:12px'>The server is not available anymore.</li>");
    sb.push("<li style='font-family:Open Sans;font-size:12px'>The session on the server is not available anymore.</li>");
    sb.push("<li style='font-family:Open Sans;font-size:12px'>An error occurred in the server side application.</li>");
    sb.push("</ul>");
    sb.push("</p>");
    sb.push("<hr>");
    sb.push("<p>");
    sb.push("<a href='javascript:RISCConfirmExit.avoidBlocking();location.reload();' style='font-size:12px; font-weight:bold'>Reload current page</a>");
    sb.push("</p>");
    sb.push("</div>");
    return sb.join("\n");
};

/**
 * Derives the image size (100% scale) for a certain image name. By default
 * this system analysis the schema [name]_[width]x[height].png, e.g.
 * "save_16x16.png". But you may have defined own rules in which the size
 * of the image is encoded into the imageName.
 */
CCPlugin.findImageSizeByFileName = function(imageName)
{
    // return new RISCDimension(16,16); ==> image size of 16 * 16;
    return null; // nothing found
};